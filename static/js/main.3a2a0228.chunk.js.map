{"version":3,"sources":["images/teliuslogo.png","features/main/Searcher.jsx","features/main/menu.jsx","App.js","reportWebVitals.js","index.js"],"names":["InputItem","colSpan","placeholder","title","h","templateRows","rowSpan","fontSize","fontWeight","fontFamily","border","paddingLeft","paddingRight","variant","DividerItem","height","width","orientation","color","SearchItem","onClick","backgroundColor","boxSize","borderRadius","icon","Search","Searcher","maxW","templateColumns","Menu","gap","src","TeliusLogo","alt","w","size","style","textAlign","lineHeight","customTheme","theme","colors","brand","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAAe,MAA0B,uC,uECOnCA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,MAAzB,OACd,cAAC,IAAD,CAAUF,QAASA,EAAnB,SACI,eAAC,IAAD,CAAMG,EAAE,OAAOC,aAAa,iBAA5B,UACI,cAAC,IAAD,CAAUC,QAAS,EAAnB,SACI,cAAC,IAAD,CAAMC,SAAS,KAAKC,WAAW,OAAOC,WAAW,eAAjD,SACKN,MAGT,cAAC,IAAD,CAAUG,QAAS,EAAnB,SACI,cAAC,IAAD,CACIJ,YAAaA,EACbQ,OAAO,OACPD,WAAW,eACXE,YAAY,IACZC,aAAa,IACbC,QAAQ,qBAOtBC,EAAc,kBAChB,cAAC,IAAD,CAAUb,QAAS,EAAnB,SACI,cAAC,IAAD,CAAQc,OAAO,OAAOC,MAAM,OAA5B,SACI,cAAC,IAAD,CAASC,YAAY,WAAWF,OAAO,MAAMG,MAAM,kBAKzDC,EAAa,SAAC,GAAD,EAAGC,QAAH,OACf,cAAC,IAAD,CAAUnB,QAAS,EAAnB,SACI,cAAC,IAAD,CAAQc,OAAO,OAAOC,MAAM,OAA5B,SACI,cAAC,IAAD,CACIE,MAAM,QACNG,gBAAgB,UAChB,aAAW,kBACXC,QAAQ,KACRC,aAAa,KACbhB,SAAS,KACTG,OAAO,OACPc,KAAM,cAACC,EAAA,EAAD,WAwCPC,EAlCS,WACpB,OACI,cAAC,IAAD,CACIX,OAAO,OACPM,gBAAgB,QAChBM,KAAK,eACLJ,aAAa,OACbZ,YAAY,OACZC,aAAa,OANjB,SAQI,eAAC,IAAD,CAAMG,OAAO,OAAOa,gBAAgB,kBAApC,UACI,cAAC,EAAD,CACI3B,QAAS,EACTE,MAAM,mBACND,YAAY,mCAEhB,cAAC,EAAD,IACA,cAAC,EAAD,CACID,QAAS,EACTE,MAAM,eACND,YAAY,8BAEhB,cAAC,EAAD,IACA,cAAC,EAAD,CACID,QAAS,EACTE,MAAM,WACND,YAAY,uCAEhB,cAAC,EAAD,UC9CD2B,EA7BK,WAChB,OACI,eAAC,IAAD,CAAMzB,EAAE,QAAQwB,gBAAgB,iBAAiBE,IAAK,EAAtD,UACI,cAAC,IAAD,CAAU7B,QAAS,EAAnB,SACI,cAAC,IAAD,CAAO8B,IAAKC,EAAYC,IAAI,aAEhC,cAAC,IAAD,CAAUhC,QAAS,EAAGK,QAAS,EAA/B,SACI,cAAC,IAAD,CAAQS,OAAQ,OAAQmB,EAAE,OAA1B,SACI,eAAC,IAAD,CACIC,KAAK,MACLC,MAAO,CACHlB,MAAO,QACPT,WAAY,gBAEhB4B,UAAU,SACVC,WAAW,MAPf,6DAUI,uBAVJ,qCAcR,cAAC,IAAD,CAAUrC,QAAS,EAAGK,QAAS,EAA/B,SACI,cAAC,EAAD,UCxBViC,EAAW,2BACVC,SADU,IAEbC,OAAO,2BACAD,QAAMC,QADP,IAEFC,MAAO,CACH,IAAK,UACL,IAAK,UACL,IAAK,eAaFC,MARf,WACI,OACI,cAAC,IAAD,CAAeH,MAAOD,EAAtB,SACI,cAAC,EAAD,OCTGK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3a2a0228.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/teliuslogo.77c4fdbc.png\";","import { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { Center, Grid, GridItem, Text } from \"@chakra-ui/react\";\r\nimport { Container } from \"@chakra-ui/react\";\r\nimport { Input } from \"@chakra-ui/react\";\r\nimport { Divider } from \"@chakra-ui/react\";\r\nimport { IconButton } from \"@chakra-ui/react\";\r\n\r\nconst InputItem = ({ colSpan, placeholder, title }) => (\r\n    <GridItem colSpan={colSpan}>\r\n        <Grid h=\"100%\" templateRows=\"repeat(2, 0fr)\">\r\n            <GridItem rowSpan={1}>\r\n                <Text fontSize=\"sm\" fontWeight=\"bold\" fontFamily=\"Varela Round\">\r\n                    {title}\r\n                </Text>\r\n            </GridItem>\r\n            <GridItem rowSpan={1}>\r\n                <Input\r\n                    placeholder={placeholder}\r\n                    border=\"none\"\r\n                    fontFamily=\"Varela Round\"\r\n                    paddingLeft=\"0\"\r\n                    paddingRight=\"0\"\r\n                    variant=\"unstyled\"\r\n                />\r\n            </GridItem>\r\n        </Grid>\r\n    </GridItem>\r\n);\r\n\r\nconst DividerItem = () => (\r\n    <GridItem colSpan={1}>\r\n        <Center height=\"100%\" width=\"100%\">\r\n            <Divider orientation=\"vertical\" height=\"70%\" color=\"gray.400\" />\r\n        </Center>\r\n    </GridItem>\r\n);\r\n\r\nconst SearchItem = ({ onClick }) => (\r\n    <GridItem colSpan={1}>\r\n        <Center height=\"100%\" width=\"100%\">\r\n            <IconButton\r\n                color=\"white\"\r\n                backgroundColor=\"#5993DC\"\r\n                aria-label=\"Search database\"\r\n                boxSize=\"14\"\r\n                borderRadius=\"28\"\r\n                fontSize=\"28\"\r\n                border=\"none\"\r\n                icon={<SearchIcon />}\r\n            />\r\n        </Center>\r\n    </GridItem>\r\n);\r\n\r\nexport const Searcher = () => {\r\n    return (\r\n        <Container\r\n            height=\"100%\"\r\n            backgroundColor=\"white\"\r\n            maxW=\"container.lg\"\r\n            borderRadius=\"50px\"\r\n            paddingLeft=\"30px\"\r\n            paddingRight=\"30px\"\r\n        >\r\n            <Grid height=\"100%\" templateColumns=\"repeat(15, 1fr)\">\r\n                <InputItem\r\n                    colSpan={4}\r\n                    title=\"Materia o idioma\"\r\n                    placeholder=\"Ej: Física, Inglés, etc.\"\r\n                />\r\n                <DividerItem />\r\n                <InputItem\r\n                    colSpan={4}\r\n                    title=\"Ubicación\"\r\n                    placeholder=\"Ej: Palermo, Buenos Aires\"\r\n                />\r\n                <DividerItem />\r\n                <InputItem\r\n                    colSpan={4}\r\n                    title=\"Horarios\"\r\n                    placeholder=\"Ej: Lu, Ma, Mi - 14hs a 18hs - ...\"\r\n                />\r\n                <SearchItem />\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Searcher;\r\n","import { Grid, GridItem } from \"@chakra-ui/react\";\r\nimport { Image } from \"@chakra-ui/react\";\r\nimport TeliusLogo from \"images/teliuslogo.png\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { Center } from \"@chakra-ui/react\";\r\nimport Searcher from \"./Searcher\";\r\n\r\nexport const Menu = () => {\r\n    return (\r\n        <Grid h=\"100px\" templateColumns=\"repeat(7, 1fr)\" gap={4}>\r\n            <GridItem colSpan={1}>\r\n                <Image src={TeliusLogo} alt=\"telius\" />\r\n            </GridItem>\r\n            <GridItem colSpan={7} rowSpan={5}>\r\n                <Center height={\"100%\"} w=\"100%\">\r\n                    <Heading\r\n                        size=\"2xl\"\r\n                        style={{\r\n                            color: \"white\",\r\n                            fontFamily: \"Varela Round\",\r\n                        }}\r\n                        textAlign=\"center\"\r\n                        lineHeight=\"1.4\"\r\n                    >\r\n                        Encontrá el profesor más cercano a tu casa\r\n                        <br />y comenzá tu aprendizaje\r\n                    </Heading>\r\n                </Center>\r\n            </GridItem>\r\n            <GridItem colSpan={7} rowSpan={6}>\r\n                <Searcher />\r\n            </GridItem>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import { ThemeProvider } from \"@chakra-ui/react\";\nimport { theme } from \"@chakra-ui/react\";\nimport \"./App.css\";\nimport Menu from \"./features/main/menu\";\n\n// Let's say you want to add custom colors\nconst customTheme = {\n    ...theme,\n    colors: {\n        ...theme.colors,\n        brand: {\n            900: \"#1a365d\",\n            800: \"#153e75\",\n            700: \"#2a69ac\",\n        },\n    },\n};\n\nfunction App() {\n    return (\n        <ThemeProvider theme={customTheme}>\n            <Menu />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}